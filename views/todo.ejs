<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
        integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <!-- Bootstrap 4 -->
    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"
        integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
        integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
        crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"
        integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
        crossorigin="anonymous"></script>
    <title>Todo List</title>
</head>

<body>
    <nav class="navbar navbar-light bg-light justify-content-center mb-5">
        <img class="user-icon m-3" src="https://cdn.iconscout.com/icon/premium/png-256-thumb/rick-sanchez-1-563922.png"
            style="width: 5%;">
    </nav>
    <div class="container">
        <section id="operation">
            <div class="d-flex flex-row bd-highlight mb-3">
                <div class="p-2 bd-highlight">
                    <select class="custom-select" id="inputGroupSelect01" onchange="switchUser(this)">
                        <option value="-1">Choose</option>
                    </select>
                </div>
                <div class="p-2 bd-highlight">
                    <button type="button" class="btn btn-primary" data-toggle="modal"
                        data-target="#exampleModal">Add</button>
                </div>
            </div>
        </section>
        <section id="listBoard" class="bg-light">
            <div class="container"></div>
        </section>
        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
            aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">New List</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <input type="text" class="new-list-content form-control" placeholder="Recipient's username"
                            aria-label="Recipient's username">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="addList()">Add</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
<div id='listTemplate' class="d-none">
    <div class="list p-2">
        <div class="row align-items-center">
            <div class="col-md-10">
                <div class="alert alert-info content" role="alert"></div>
            </div>
            <div class="col-md-2">
                <div class="d-flex flex-row bd-highlight mb-3">
                    <div class="p-2 bd-highlight">
                        <button type="button" class="btn btn-success rounded done-btn">Done</button>
                    </div>
                    <div class="p-2 bd-highlight">
                        <button type="button" class="btn btn-danger rounded del-btn">Del</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

</html>

<script>
    let users = [];
    let currentUser = -1;

    window.onload = function () {
        init()
    }

    function init() {
        loadUsera().then((data) => {
            users = data;
            createUserOptions();
        })
    }

    function createUserOptions() {
        const userSelector = document.querySelector('.custom-select');
        users.forEach((user, index) => {
            let option = document.createElement('option');
            let textNode = document.createTextNode(`${user.name}`);
            option.setAttribute('value', `${index}`);
            option.appendChild(textNode);
            userSelector.appendChild(option);
        });
    }

    function switchUser(el) {
        const userIcon = document.querySelector('.user-icon');
        currentUser = el.options[el.selectedIndex].value;
        if (currentUser != -1) {
            userIcon.src = users[currentUser].thumbnail;
            generateLists();
        }
    }

    async function generateLists() {
        const listBoard = document.querySelector('#listBoard .container');
        listBoard.innerHTML = '';
        if (currentUser != -1) {
            loadLists().then((lists) => {
                for (let i = 0; i < lists.length; i++) {
                    const list = document.querySelector('#listTemplate .list').cloneNode(true);
                    const listContent = list.querySelector('.content');
                    listContent.textContent = lists[i].content;
                    list.querySelector('.done-btn').addEventListener("click", () => { listDone(lists[i]._id) });
                    list.querySelector('.del-btn').addEventListener("click", () => { listRemove(lists[i]._id) });
                    if (lists[i].finished) {
                        listContent.classList.remove("alert-info");
                        listContent.classList.add("alert-success");
                    } else {
                        listContent.classList.remove("alert-success");
                        listContent.classList.add("alert-info");
                    }
                    listBoard.append(list);
                }
            });
        }
    }

    function listDone(listId) {
        fetch(`http://127.0.0.1:3000/list/test/status/${listId}`, {
            method: 'GET',
            mode: 'cors',
            redirect: 'follow',
            headers: new Headers({
                'Content-Type': 'text/json'
            })
        }).then(function (response) {
            return response.json()
        }).then(function (data) {
            generateLists()
        }).catch(function (err) {
            console.log(err)
        });
    }

    function listRemove(listId) {
        fetch(`http://127.0.0.1:3000/list/test/${listId}`, {
            method: 'Delete',
            mode: 'cors',
            redirect: 'follow',
            headers: new Headers({
                'Content-Type': 'text/json'
            })
        }).then(function (response) {
            return response.json()
        }).then(function (data) {
            generateLists()
        }).catch(function (err) {
            console.log(err)
        })
    }

    function addList() {
        if (currentUser != -1) {
            data = {
                content: document.querySelector('.new-list-content').value,
                owner: users[currentUser]._id
            }
            fetch(`http://127.0.0.1:3000/list/test`, {
                method: 'Post',
                body: JSON.stringify(data),
                mode: 'cors',
                redirect: 'follow',
                headers: new Headers({
                    'Content-Type': 'application/json'
                })
            }).then((response) => {
                return response.json()
            }).then((data) => {
                generateLists();
                document.querySelector('.new-list-content').value = '';
                $('#exampleModal').modal('hide');
            }).catch((err) => {
                console.log(err)
            })
        }
    }

    function loadUsera() {
        return fetch(`http://127.0.0.1:3000/user/test/all`, {
            method: 'GET',
            mode: 'cors',
            redirect: 'follow',
            headers: new Headers({
                'Content-Type': 'text/json'
            })
        }).then((response) => {
            return response.json()
        }).then((data) => {
            return data
        }).catch((err) => {
            console.log(err)
        })
    }

    function loadLists() {
        return fetch(`http://127.0.0.1:3000/list/test/${users[currentUser]._id}`, {
            method: 'GET',
            mode: 'cors',
            redirect: 'follow',
            headers: new Headers({
                'Content-Type': 'text/json'
            })
        }).then((response) => {
            return response.json()
        }).then((data) => {
            return data
        }).catch((err) => {
            console.log(err)
        })
    }
</script>

<style>
    .alert {
        margin-bottom: 0px;
    }
</style>